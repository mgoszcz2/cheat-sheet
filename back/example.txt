     0  *ast.File {
     1  .  Package: test_file.go:1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: test_file.go:1:9
     4  .  .  Name: "test"
     5  .  }
     6  .  Decls: []ast.Decl (len = 3) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: test_file.go:3:1
     9  .  .  .  Tok: type
    10  .  .  .  Lparen: -
    11  .  .  .  Specs: []ast.Spec (len = 1) {
    12  .  .  .  .  0: *ast.TypeSpec {
    13  .  .  .  .  .  Name: *ast.Ident {
    14  .  .  .  .  .  .  NamePos: test_file.go:3:6
    15  .  .  .  .  .  .  Name: "ExportedStruct"
    16  .  .  .  .  .  .  Obj: *ast.Object {
    17  .  .  .  .  .  .  .  Kind: type
    18  .  .  .  .  .  .  .  Name: "ExportedStruct"
    19  .  .  .  .  .  .  .  Decl: *(obj @ 12)
    20  .  .  .  .  .  .  }
    21  .  .  .  .  .  }
    22  .  .  .  .  .  Assign: -
    23  .  .  .  .  .  Type: *ast.StructType {
    24  .  .  .  .  .  .  Struct: test_file.go:3:21
    25  .  .  .  .  .  .  Fields: *ast.FieldList {
    26  .  .  .  .  .  .  .  Opening: test_file.go:3:28
    27  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
    28  .  .  .  .  .  .  .  .  0: *ast.Field {
    29  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    30  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    31  .  .  .  .  .  .  .  .  .  .  .  NamePos: test_file.go:4:5
    32  .  .  .  .  .  .  .  .  .  .  .  Name: "Exported"
    33  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    34  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    35  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Exported"
    36  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 28)
    37  .  .  .  .  .  .  .  .  .  .  .  }
    38  .  .  .  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    41  .  .  .  .  .  .  .  .  .  .  NamePos: test_file.go:4:14
    42  .  .  .  .  .  .  .  .  .  .  Name: "int"
    43  .  .  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  Closing: test_file.go:6:1
    47  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  Incomplete: true
    49  .  .  .  .  .  }
    50  .  .  .  .  }
    51  .  .  .  }
    52  .  .  .  Rparen: -
    53  .  .  }
    54  .  .  1: *ast.GenDecl {
    55  .  .  .  TokPos: test_file.go:8:1
    56  .  .  .  Tok: type
    57  .  .  .  Lparen: -
    58  .  .  .  Specs: []ast.Spec (len = 1) {
    59  .  .  .  .  0: *ast.TypeSpec {
    60  .  .  .  .  .  Name: *ast.Ident {
    61  .  .  .  .  .  .  NamePos: test_file.go:8:6
    62  .  .  .  .  .  .  Name: "ExportedType"
    63  .  .  .  .  .  .  Obj: *ast.Object {
    64  .  .  .  .  .  .  .  Kind: type
    65  .  .  .  .  .  .  .  Name: "ExportedType"
    66  .  .  .  .  .  .  .  Decl: *(obj @ 59)
    67  .  .  .  .  .  .  }
    68  .  .  .  .  .  }
    69  .  .  .  .  .  Assign: -
    70  .  .  .  .  .  Type: *ast.Ident {
    71  .  .  .  .  .  .  NamePos: test_file.go:8:19
    72  .  .  .  .  .  .  Name: "int"
    73  .  .  .  .  .  }
    74  .  .  .  .  }
    75  .  .  .  }
    76  .  .  .  Rparen: -
    77  .  .  }
    78  .  .  2: *ast.FuncDecl {
    79  .  .  .  Name: *ast.Ident {
    80  .  .  .  .  NamePos: test_file.go:10:6
    81  .  .  .  .  Name: "ExportedFunction"
    82  .  .  .  .  Obj: *ast.Object {
    83  .  .  .  .  .  Kind: func
    84  .  .  .  .  .  Name: "ExportedFunction"
    85  .  .  .  .  .  Decl: *(obj @ 78)
    86  .  .  .  .  }
    87  .  .  .  }
    88  .  .  .  Type: *ast.FuncType {
    89  .  .  .  .  Func: test_file.go:10:1
    90  .  .  .  .  Params: *ast.FieldList {
    91  .  .  .  .  .  Opening: test_file.go:10:22
    92  .  .  .  .  .  List: []*ast.Field (len = 3) {
    93  .  .  .  .  .  .  0: *ast.Field {
    94  .  .  .  .  .  .  .  Type: *ast.Ident {
    95  .  .  .  .  .  .  .  .  NamePos: test_file.go:10:23
    96  .  .  .  .  .  .  .  .  Name: "int"
    97  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  1: *ast.Field {
   100  .  .  .  .  .  .  .  Type: *ast.Ident {
   101  .  .  .  .  .  .  .  .  NamePos: test_file.go:10:28
   102  .  .  .  .  .  .  .  .  Name: "int"
   103  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  2: *ast.Field {
   106  .  .  .  .  .  .  .  Type: *ast.Ident {
   107  .  .  .  .  .  .  .  .  NamePos: test_file.go:10:33
   108  .  .  .  .  .  .  .  .  Name: "string"
   109  .  .  .  .  .  .  .  }
   110  .  .  .  .  .  .  }
   111  .  .  .  .  .  }
   112  .  .  .  .  .  Closing: test_file.go:10:39
   113  .  .  .  .  }
   114  .  .  .  .  Results: *ast.FieldList {
   115  .  .  .  .  .  Opening: test_file.go:10:41
   116  .  .  .  .  .  List: []*ast.Field (len = 2) {
   117  .  .  .  .  .  .  0: *ast.Field {
   118  .  .  .  .  .  .  .  Type: *ast.Ident {
   119  .  .  .  .  .  .  .  .  NamePos: test_file.go:10:42
   120  .  .  .  .  .  .  .  .  Name: "int32"
   121  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  1: *ast.Field {
   124  .  .  .  .  .  .  .  Type: *ast.Ident {
   125  .  .  .  .  .  .  .  .  NamePos: test_file.go:10:49
   126  .  .  .  .  .  .  .  .  Name: "int64"
   127  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  }
   129  .  .  .  .  .  }
   130  .  .  .  .  .  Closing: test_file.go:10:54
   131  .  .  .  .  }
   132  .  .  .  }
   133  .  .  .  Body: *ast.BlockStmt {
   134  .  .  .  .  Lbrace: test_file.go:10:56
   135  .  .  .  .  Rbrace: test_file.go:11:1
   136  .  .  .  }
   137  .  .  }
   138  .  }
   139  .  Scope: *ast.Scope {
   140  .  .  Objects: map[string]*ast.Object (len = 3) {
   141  .  .  .  "ExportedStruct": *(obj @ 16)
   142  .  .  .  "ExportedType": *(obj @ 63)
   143  .  .  .  "ExportedFunction": *(obj @ 82)
   144  .  .  }
   145  .  }
   146  .  Unresolved: []*ast.Ident (len = 8) {
   147  .  .  0: *(obj @ 40)
   148  .  .  1: *ast.Ident {
   149  .  .  .  NamePos: test_file.go:5:16
   150  .  .  .  Name: "int"
   151  .  .  }
   152  .  .  2: *(obj @ 70)
   153  .  .  3: *(obj @ 94)
   154  .  .  4: *(obj @ 100)
   155  .  .  5: *(obj @ 106)
   156  .  .  6: *(obj @ 118)
   157  .  .  7: *(obj @ 124)
   158  .  }
   159  }
OUT: {[{ExportedFunction [int int string] []}]}